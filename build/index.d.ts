import { Db } from 'mongodb';
export declare const pullNumberFromString: (in_str: string) => number;
export declare const clearObject: (obj: Record<string, any>) => Record<string, any>;
export declare const clearArray: (arr: any[]) => any[];
export declare function isValidHttpUrl(string: string): boolean;
export declare const shallowCompare: (obj1: Record<string, any>, obj2: Record<string, any>) => boolean;
export declare const alphanumericWithSpaceHyphen: RegExp;
export declare const checkStringForDatabase: (potential_name: string) => true | "Cannot have '_' in name, use '-' instead" | "Cannot have empty name" | "Names cannot be longer 40 characters" | "Names can only contain a-Z, 0-9, ' ', -" | "Cannot have name 'Checkbox'" | "Cannot have name 'Limit'" | "Cannot have name 'Offset'" | "Cannot have name 'INSERTATEND'" | "Cannot have name 'SearchString'" | "Cannot have name 'Order'" | "Cannot have name 'JustColumns'" | "Cannot have numeric name";
export declare function convertToType(initialValue: any, easybaseType: any): any;
export declare function convertTimeHHMMToMinutes(timeString: string): number;
export declare function convertMinsToHrsMins12(mins: number): string;
export declare function convertMinsToHrsMins24(mins: number): string;
export declare function setDefaultValues(initialObj: any, mongoColTypesArr: any[]): void;
export declare function transformValueToDefault(initialValue: any, easybaseType: string): Promise<any>;
export declare function transformValue(initialValue: any, easybaseType: string, transformTo: any): Promise<any>;
export declare const accessorNameToColumnName: (given_key: string) => string;
export declare const normalizeAccessorName: (given_key: string) => string;
export declare const translateRecordForDB: (initialObject: any, mongoColTypesArr: any[], addNulls?: boolean) => any;
export declare const normalizeObjectForDB: (obj: any, valid_keys_arr: any[], accessorToTypeMap: Record<string, any>, addNulls?: boolean) => any;
export declare const HASH_PLACEHOLDER = "??????????";
export declare const createMongoSearchQuery: (column_accessors: any[], search_str: any) => {
    $or: any[];
};
export declare function hashBuilder(inputsToHash: any[], inputsToNotHash?: never[]): Promise<string>;
export declare function getTableNames(db: Db): Promise<any[]>;
export declare function shiftDocs(db: Db, collection: string, startIndex: number, shiftBy: number): Promise<void>;
export declare function roundToDecimal(number: number, places: number): number;
export declare const forEachAsyncParallel: (array: any[], callback: any, thisArg: any) => Promise<void>;
